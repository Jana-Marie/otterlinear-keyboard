ARM GAS  /tmp/ccEM5Rnn.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_hid.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_HID_GetCfgDesc,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	USBD_HID_GetCfgDesc:
  24              	.LVL0:
  25              	.LFB48:
  26              		.file 1 "Core/Src/usbd_hid.c"
   1:Core/Src/usbd_hid.c **** /**
   2:Core/Src/usbd_hid.c ****   ******************************************************************************
   3:Core/Src/usbd_hid.c ****   * @file    usbd_hid.c
   4:Core/Src/usbd_hid.c ****   * @author  MCD Application Team
   5:Core/Src/usbd_hid.c ****   * @version V2.4.2
   6:Core/Src/usbd_hid.c ****   * @date    11-December-2015
   7:Core/Src/usbd_hid.c ****   * @brief   This file provides the HID core functions.
   8:Core/Src/usbd_hid.c ****   *
   9:Core/Src/usbd_hid.c ****   * @verbatim
  10:Core/Src/usbd_hid.c ****   *      
  11:Core/Src/usbd_hid.c ****   *          ===================================================================      
  12:Core/Src/usbd_hid.c ****   *                                HID Class  Description
  13:Core/Src/usbd_hid.c ****   *          =================================================================== 
  14:Core/Src/usbd_hid.c ****   *           This module manages the HID class V1.11 following the "Device Class Definition
  15:Core/Src/usbd_hid.c ****   *           for Human Interface Devices (HID) Version 1.11 Jun 27, 2001".
  16:Core/Src/usbd_hid.c ****   *           This driver implements the following aspects of the specification:
  17:Core/Src/usbd_hid.c ****   *             - The Boot Interface Subclass
  18:Core/Src/usbd_hid.c ****   *             - The Mouse protocol
  19:Core/Src/usbd_hid.c ****   *             - Usage Page : Generic Desktop
  20:Core/Src/usbd_hid.c ****   *             - Usage : Joystick
  21:Core/Src/usbd_hid.c ****   *             - Collection : Application 
  22:Core/Src/usbd_hid.c ****   *      
  23:Core/Src/usbd_hid.c ****   * @note     In HS mode and when the DMA is used, all variables and data structures
  24:Core/Src/usbd_hid.c ****   *           dealing with the DMA during the transaction process should be 32-bit aligned.
  25:Core/Src/usbd_hid.c ****   *           
  26:Core/Src/usbd_hid.c ****   *      
  27:Core/Src/usbd_hid.c ****   *  @endverbatim
  28:Core/Src/usbd_hid.c ****   *
  29:Core/Src/usbd_hid.c ****   ******************************************************************************
  30:Core/Src/usbd_hid.c ****   * @attention
  31:Core/Src/usbd_hid.c ****   *
  32:Core/Src/usbd_hid.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
ARM GAS  /tmp/ccEM5Rnn.s 			page 2


  33:Core/Src/usbd_hid.c ****   *
  34:Core/Src/usbd_hid.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  35:Core/Src/usbd_hid.c ****   * You may not use this file except in compliance with the License.
  36:Core/Src/usbd_hid.c ****   * You may obtain a copy of the License at:
  37:Core/Src/usbd_hid.c ****   *
  38:Core/Src/usbd_hid.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  39:Core/Src/usbd_hid.c ****   *
  40:Core/Src/usbd_hid.c ****   * Unless required by applicable law or agreed to in writing, software 
  41:Core/Src/usbd_hid.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  42:Core/Src/usbd_hid.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  43:Core/Src/usbd_hid.c ****   * See the License for the specific language governing permissions and
  44:Core/Src/usbd_hid.c ****   * limitations under the License.
  45:Core/Src/usbd_hid.c ****   *
  46:Core/Src/usbd_hid.c ****   ******************************************************************************
  47:Core/Src/usbd_hid.c ****   */ 
  48:Core/Src/usbd_hid.c **** 
  49:Core/Src/usbd_hid.c **** /* Includes ------------------------------------------------------------------*/
  50:Core/Src/usbd_hid.c **** #include "usbd_hid.h"
  51:Core/Src/usbd_hid.c **** #include "usbd_desc.h"
  52:Core/Src/usbd_hid.c **** #include "usbd_ctlreq.h"
  53:Core/Src/usbd_hid.c **** 
  54:Core/Src/usbd_hid.c **** 
  55:Core/Src/usbd_hid.c **** /** @addtogroup STM32_USB_DEVICE_LIBRARY
  56:Core/Src/usbd_hid.c ****   * @{
  57:Core/Src/usbd_hid.c ****   */
  58:Core/Src/usbd_hid.c **** 
  59:Core/Src/usbd_hid.c **** 
  60:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID 
  61:Core/Src/usbd_hid.c ****   * @brief usbd core module
  62:Core/Src/usbd_hid.c ****   * @{
  63:Core/Src/usbd_hid.c ****   */ 
  64:Core/Src/usbd_hid.c **** 
  65:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_TypesDefinitions
  66:Core/Src/usbd_hid.c ****   * @{
  67:Core/Src/usbd_hid.c ****   */ 
  68:Core/Src/usbd_hid.c **** /**
  69:Core/Src/usbd_hid.c ****   * @}
  70:Core/Src/usbd_hid.c ****   */ 
  71:Core/Src/usbd_hid.c **** 
  72:Core/Src/usbd_hid.c **** 
  73:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_Defines
  74:Core/Src/usbd_hid.c ****   * @{
  75:Core/Src/usbd_hid.c ****   */ 
  76:Core/Src/usbd_hid.c **** 
  77:Core/Src/usbd_hid.c **** /**
  78:Core/Src/usbd_hid.c ****   * @}
  79:Core/Src/usbd_hid.c ****   */ 
  80:Core/Src/usbd_hid.c **** 
  81:Core/Src/usbd_hid.c **** 
  82:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_Macros
  83:Core/Src/usbd_hid.c ****   * @{
  84:Core/Src/usbd_hid.c ****   */ 
  85:Core/Src/usbd_hid.c **** /**
  86:Core/Src/usbd_hid.c ****   * @}
  87:Core/Src/usbd_hid.c ****   */ 
  88:Core/Src/usbd_hid.c **** 
  89:Core/Src/usbd_hid.c **** 
ARM GAS  /tmp/ccEM5Rnn.s 			page 3


  90:Core/Src/usbd_hid.c **** 
  91:Core/Src/usbd_hid.c **** 
  92:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_FunctionPrototypes
  93:Core/Src/usbd_hid.c ****   * @{
  94:Core/Src/usbd_hid.c ****   */
  95:Core/Src/usbd_hid.c **** 
  96:Core/Src/usbd_hid.c **** 
  97:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_Init (USBD_HandleTypeDef *pdev, 
  98:Core/Src/usbd_hid.c ****                                uint8_t cfgidx);
  99:Core/Src/usbd_hid.c **** 
 100:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DeInit (USBD_HandleTypeDef *pdev, 
 101:Core/Src/usbd_hid.c ****                                  uint8_t cfgidx);
 102:Core/Src/usbd_hid.c **** 
 103:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_Setup (USBD_HandleTypeDef *pdev, 
 104:Core/Src/usbd_hid.c ****                                 USBD_SetupReqTypedef *req);
 105:Core/Src/usbd_hid.c **** 
 106:Core/Src/usbd_hid.c **** static uint8_t  *USBD_HID_GetCfgDesc (uint16_t *length);
 107:Core/Src/usbd_hid.c **** 
 108:Core/Src/usbd_hid.c **** static uint8_t  *USBD_HID_GetDeviceQualifierDesc (uint16_t *length);
 109:Core/Src/usbd_hid.c **** 
 110:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DataIn (USBD_HandleTypeDef *pdev, uint8_t epnum);
 111:Core/Src/usbd_hid.c **** 
 112:Core/Src/usbd_hid.c **** 
 113:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DataOut (USBD_HandleTypeDef *pdev, uint8_t epnum);
 114:Core/Src/usbd_hid.c **** /**
 115:Core/Src/usbd_hid.c ****   * @}
 116:Core/Src/usbd_hid.c ****   */ 
 117:Core/Src/usbd_hid.c **** 
 118:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_Variables
 119:Core/Src/usbd_hid.c ****   * @{
 120:Core/Src/usbd_hid.c ****   */ 
 121:Core/Src/usbd_hid.c **** 
 122:Core/Src/usbd_hid.c **** USBD_ClassTypeDef  USBD_HID = 
 123:Core/Src/usbd_hid.c **** {
 124:Core/Src/usbd_hid.c ****   USBD_HID_Init,
 125:Core/Src/usbd_hid.c ****   USBD_HID_DeInit,
 126:Core/Src/usbd_hid.c ****   USBD_HID_Setup,
 127:Core/Src/usbd_hid.c ****   NULL, /*EP0_TxSent*/  
 128:Core/Src/usbd_hid.c ****   NULL, /*EP0_RxReady*/
 129:Core/Src/usbd_hid.c ****   USBD_HID_DataIn, /*DataIn*/
 130:Core/Src/usbd_hid.c ****   USBD_HID_DataOut, /*DataOut*/
 131:Core/Src/usbd_hid.c ****   NULL, /*SOF */
 132:Core/Src/usbd_hid.c ****   NULL,
 133:Core/Src/usbd_hid.c ****   NULL,      
 134:Core/Src/usbd_hid.c ****   USBD_HID_GetCfgDesc,
 135:Core/Src/usbd_hid.c ****   USBD_HID_GetCfgDesc, 
 136:Core/Src/usbd_hid.c ****   USBD_HID_GetCfgDesc,
 137:Core/Src/usbd_hid.c ****   USBD_HID_GetDeviceQualifierDesc,
 138:Core/Src/usbd_hid.c **** };
 139:Core/Src/usbd_hid.c **** 
 140:Core/Src/usbd_hid.c **** /* USB HID device Configuration Descriptor */
 141:Core/Src/usbd_hid.c **** __ALIGN_BEGIN static uint8_t USBD_HID_CfgDesc[USB_HID_CONFIG_DESC_SIZ]  __ALIGN_END =
 142:Core/Src/usbd_hid.c **** {
 143:Core/Src/usbd_hid.c ****   0x09, /* bLength: Configuration Descriptor size */
 144:Core/Src/usbd_hid.c ****   USB_DESC_TYPE_CONFIGURATION, /* bDescriptorType: Configuration */
 145:Core/Src/usbd_hid.c ****   USB_HID_CONFIG_DESC_SIZ,
 146:Core/Src/usbd_hid.c ****   /* wTotalLength: Bytes returned */
ARM GAS  /tmp/ccEM5Rnn.s 			page 4


 147:Core/Src/usbd_hid.c ****   0x00,
 148:Core/Src/usbd_hid.c ****   0x01,         /*bNumInterfaces: 1 interface*/
 149:Core/Src/usbd_hid.c ****   0x01,         /*bConfigurationValue: Configuration value*/
 150:Core/Src/usbd_hid.c ****   0x00,         /*iConfiguration: Index of string descriptor describing
 151:Core/Src/usbd_hid.c ****   the configuration*/
 152:Core/Src/usbd_hid.c ****   0xE0,         /*bmAttributes: bus powered and Support Remote Wake-up */
 153:Core/Src/usbd_hid.c ****   0x32,         /*MaxPower 100 mA: this current is used for detecting Vbus*/
 154:Core/Src/usbd_hid.c ****   
 155:Core/Src/usbd_hid.c ****   /************** Descriptor of Joystick Mouse interface ****************/
 156:Core/Src/usbd_hid.c ****   /* 09 */
 157:Core/Src/usbd_hid.c ****   0x09,         /*bLength: Interface Descriptor size*/
 158:Core/Src/usbd_hid.c ****   USB_DESC_TYPE_INTERFACE,/*bDescriptorType: Interface descriptor type*/
 159:Core/Src/usbd_hid.c ****   0x00,         /*bInterfaceNumber: Number of Interface*/
 160:Core/Src/usbd_hid.c ****   0x00,         /*bAlternateSetting: Alternate setting*/
 161:Core/Src/usbd_hid.c ****   HID_NUM_EP,
 162:Core/Src/usbd_hid.c **** 
 163:Core/Src/usbd_hid.c ****   0x03,         /*bInterfaceClass: HID*/
 164:Core/Src/usbd_hid.c **** 
 165:Core/Src/usbd_hid.c ****   0x01,         /*bInterfaceSubClass : 1=BOOT, 0=no boot*/
 166:Core/Src/usbd_hid.c ****   0x01,         /*nInterfaceProtocol : 0=none, 1=keyboard, 2=mouse*/
 167:Core/Src/usbd_hid.c ****   0,            /*iInterface: Index of string descriptor*/
 168:Core/Src/usbd_hid.c ****   /******************** Descriptor of Joystick Mouse HID ********************/
 169:Core/Src/usbd_hid.c ****   /* 18 */
 170:Core/Src/usbd_hid.c ****   0x09,         /*bLength: HID Descriptor size*/
 171:Core/Src/usbd_hid.c ****   HID_DESCRIPTOR_TYPE, /*bDescriptorType: HID*/
 172:Core/Src/usbd_hid.c ****   0x11,         /*bcdHID: HID Class Spec release number*/
 173:Core/Src/usbd_hid.c ****   0x01,
 174:Core/Src/usbd_hid.c ****   0x00,         /*bCountryCode: Hardware target country*/
 175:Core/Src/usbd_hid.c ****   0x01,         /*bNumDescriptors: Number of HID class descriptors to follow*/
 176:Core/Src/usbd_hid.c ****   0x22,         /*bDescriptorType*/
 177:Core/Src/usbd_hid.c ****   HID_REPORT_DESC_SIZE,/*wItemLength: Total length of Report descriptor*/
 178:Core/Src/usbd_hid.c ****   0x00,
 179:Core/Src/usbd_hid.c ****   /******************** Descriptor of Mouse endpoint ********************/
 180:Core/Src/usbd_hid.c ****   /* 27 */
 181:Core/Src/usbd_hid.c ****   0x07,          /*bLength: Endpoint Descriptor size*/
 182:Core/Src/usbd_hid.c ****   USB_DESC_TYPE_ENDPOINT, /*bDescriptorType:*/
 183:Core/Src/usbd_hid.c ****   
 184:Core/Src/usbd_hid.c ****   HID_EPIN_ADDR,     /*bEndpointAddress: Endpoint Address (IN)*/
 185:Core/Src/usbd_hid.c ****   0x03,          /*bmAttributes: Interrupt endpoint*/
 186:Core/Src/usbd_hid.c ****   HID_EPIN_SIZE, /*wMaxPacketSize: 4 Byte max */
 187:Core/Src/usbd_hid.c ****   0x00,
 188:Core/Src/usbd_hid.c ****   HID_FS_BINTERVAL,          /*bInterval: Polling Interval (10 ms)*/
 189:Core/Src/usbd_hid.c ****   /* 34 */
 190:Core/Src/usbd_hid.c **** #if   HID_LED_SUPPORT
 191:Core/Src/usbd_hid.c ****   0x07,          /*bLength: Endpoint Descriptor size*/
 192:Core/Src/usbd_hid.c ****   USB_DESC_TYPE_ENDPOINT, /*bDescriptorType:*/
 193:Core/Src/usbd_hid.c **** 
 194:Core/Src/usbd_hid.c ****   HID_EPOUT_ADDR,     /*bEndpointAddress: Endpoint Address (IN)*/
 195:Core/Src/usbd_hid.c ****   0x03,          /*bmAttributes: Interrupt endpoint*/
 196:Core/Src/usbd_hid.c ****   HID_EPOUT_SIZE, /*wMaxPacketSize: 4 Byte max */
 197:Core/Src/usbd_hid.c ****   0x00,
 198:Core/Src/usbd_hid.c ****   HID_FS_BINTERVAL,          /*bInterval: Polling Interval (10 ms)*/
 199:Core/Src/usbd_hid.c **** #endif
 200:Core/Src/usbd_hid.c ****   /* 41 */
 201:Core/Src/usbd_hid.c **** 
 202:Core/Src/usbd_hid.c **** } ;
 203:Core/Src/usbd_hid.c **** 
ARM GAS  /tmp/ccEM5Rnn.s 			page 5


 204:Core/Src/usbd_hid.c **** /* USB HID device Configuration Descriptor */
 205:Core/Src/usbd_hid.c **** __ALIGN_BEGIN static uint8_t USBD_HID_Desc[USB_HID_DESC_SIZ]  __ALIGN_END  =
 206:Core/Src/usbd_hid.c **** {
 207:Core/Src/usbd_hid.c ****   /* 18 */
 208:Core/Src/usbd_hid.c ****   0x09,         /*bLength: HID Descriptor size*/
 209:Core/Src/usbd_hid.c ****   HID_DESCRIPTOR_TYPE, /*bDescriptorType: HID*/
 210:Core/Src/usbd_hid.c ****   0x11,         /*bcdHID: HID Class Spec release number*/
 211:Core/Src/usbd_hid.c ****   0x01,
 212:Core/Src/usbd_hid.c ****   0x00,         /*bCountryCode: Hardware target country*/
 213:Core/Src/usbd_hid.c ****   0x01,         /*bNumDescriptors: Number of HID class descriptors to follow*/
 214:Core/Src/usbd_hid.c ****   0x22,         /*bDescriptorType*/
 215:Core/Src/usbd_hid.c ****   HID_REPORT_DESC_SIZE,/*wItemLength: Total length of Report descriptor*/
 216:Core/Src/usbd_hid.c ****   0x00,
 217:Core/Src/usbd_hid.c **** };
 218:Core/Src/usbd_hid.c **** 
 219:Core/Src/usbd_hid.c **** /* USB Standard Device Descriptor */
 220:Core/Src/usbd_hid.c **** __ALIGN_BEGIN static uint8_t USBD_HID_DeviceQualifierDesc[USB_LEN_DEV_QUALIFIER_DESC]  __ALIGN_END 
 221:Core/Src/usbd_hid.c **** {
 222:Core/Src/usbd_hid.c ****   USB_LEN_DEV_QUALIFIER_DESC,
 223:Core/Src/usbd_hid.c ****   USB_DESC_TYPE_DEVICE_QUALIFIER,
 224:Core/Src/usbd_hid.c ****   0x00,
 225:Core/Src/usbd_hid.c ****   0x02,
 226:Core/Src/usbd_hid.c ****   0x00,
 227:Core/Src/usbd_hid.c ****   0x00,
 228:Core/Src/usbd_hid.c ****   0x00,
 229:Core/Src/usbd_hid.c ****   0x40,
 230:Core/Src/usbd_hid.c ****   0x01,
 231:Core/Src/usbd_hid.c ****   0x00,
 232:Core/Src/usbd_hid.c **** };
 233:Core/Src/usbd_hid.c **** 
 234:Core/Src/usbd_hid.c **** __ALIGN_BEGIN static uint8_t HID_ReportDesc[HID_REPORT_DESC_SIZE]  __ALIGN_END =
 235:Core/Src/usbd_hid.c **** {
 236:Core/Src/usbd_hid.c ****         //copy from arduino code https://github.com/arduino-libraries/Keyboard/blob/master/src/Keyb
 237:Core/Src/usbd_hid.c **** 
 238:Core/Src/usbd_hid.c ****         0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
 239:Core/Src/usbd_hid.c ****         0x09, 0x06,        // Usage (Keyboard)
 240:Core/Src/usbd_hid.c ****         0xA1, 0x01,        // Collection (Application)
 241:Core/Src/usbd_hid.c **** 
 242:Core/Src/usbd_hid.c ****         0x85, 0x01,        //   Report ID (1)
 243:Core/Src/usbd_hid.c **** 
 244:Core/Src/usbd_hid.c ****         0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
 245:Core/Src/usbd_hid.c ****         0x19, 0xE0,        //   Usage Minimum (0xE0)
 246:Core/Src/usbd_hid.c ****         0x29, 0xE7,        //   Usage Maximum (0xE7)
 247:Core/Src/usbd_hid.c **** 
 248:Core/Src/usbd_hid.c ****         // it seam we missed  the shit ctrl etc .. here
 249:Core/Src/usbd_hid.c ****         0x15, 0x00,        //   Logical Minimum (0)
 250:Core/Src/usbd_hid.c ****         0x25, 0x01,        //   Logical Maximum (1)
 251:Core/Src/usbd_hid.c ****         0x75, 0x01,        //   Report Size (1)
 252:Core/Src/usbd_hid.c ****         0x95, 0x08,        //   Report Count (8)
 253:Core/Src/usbd_hid.c ****         0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position
 254:Core/Src/usbd_hid.c ****         0x95, 0x01,        //   Report Count (1)
 255:Core/Src/usbd_hid.c ****         0x75, 0x08,        //   Report Size (8)
 256:Core/Src/usbd_hid.c ****         0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Positio
 257:Core/Src/usbd_hid.c **** #if HID_LED_SUPPORT
 258:Core/Src/usbd_hid.c ****             // --------------------- output report for LED
 259:Core/Src/usbd_hid.c ****     0x95, 0x05,                    //   REPORT_COUNT (5)
 260:Core/Src/usbd_hid.c ****     0x75, 0x01,                    //   REPORT_SIZE (1)
ARM GAS  /tmp/ccEM5Rnn.s 			page 6


 261:Core/Src/usbd_hid.c ****     0x05, 0x08,                    //   USAGE_PAGE (LEDs)
 262:Core/Src/usbd_hid.c ****     0x19, 0x01,                    //   USAGE_MINIMUM (Num Lock)
 263:Core/Src/usbd_hid.c ****     0x29, 0x05,                    //   USAGE_MAXIMUM (Kana)
 264:Core/Src/usbd_hid.c ****     0x91, 0x02,                    //   OUTPUT (Data,Var,Abs)
 265:Core/Src/usbd_hid.c ****     0x95, 0x01,                    //   REPORT_COUNT (1)
 266:Core/Src/usbd_hid.c ****     0x75, 0x03,                    //   REPORT_SIZE (3)
 267:Core/Src/usbd_hid.c ****     0x91, 0x03,                    //   OUTPUT (Cnst,Var,Abs)
 268:Core/Src/usbd_hid.c **** #endif
 269:Core/Src/usbd_hid.c ****         0x95, 0x06,        //   Report Count (6)
 270:Core/Src/usbd_hid.c ****         0x75, 0x08,        //   Report Size (8)
 271:Core/Src/usbd_hid.c ****         0x15, 0x00,        //   Logical Minimum (0)
 272:Core/Src/usbd_hid.c ****         0x25, 0x65,        //   Logical Maximum (101)
 273:Core/Src/usbd_hid.c ****         0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
 274:Core/Src/usbd_hid.c ****         0x19, 0x00,        //   Usage Minimum (0x00)
 275:Core/Src/usbd_hid.c ****         0x29, 0x65,        //   Usage Maximum (0x65)
 276:Core/Src/usbd_hid.c ****         0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Positi
 277:Core/Src/usbd_hid.c ****         0xC0,              // End Collection
 278:Core/Src/usbd_hid.c **** 
 279:Core/Src/usbd_hid.c ****         // 47 bytes
 280:Core/Src/usbd_hid.c **** #if HID_MEDIA_REPORT
 281:Core/Src/usbd_hid.c ****         //help from http://www.microchip.com/forums/m618147.aspx
 282:Core/Src/usbd_hid.c ****         // this way of describing and sending media control is convenient
 283:Core/Src/usbd_hid.c ****         // short descriptor that permit all kidn meda by sending "usage" code
 284:Core/Src/usbd_hid.c ****         // see usb hid spec for full list
 285:Core/Src/usbd_hid.c ****         // it is possible to define one media key per bit it requires more space
 286:Core/Src/usbd_hid.c ****         // for descripotor and report ending is tighlyu couple to decriptor
 287:Core/Src/usbd_hid.c ****         // so it is not as convenient
 288:Core/Src/usbd_hid.c ****         // one such working code can be find here https://github.com/markwj/hidmedia/blob/master/hi
 289:Core/Src/usbd_hid.c ****         //
 290:Core/Src/usbd_hid.c **** 
 291:Core/Src/usbd_hid.c ****         0x05, 0x0C,        // Usage Page (Consumer)
 292:Core/Src/usbd_hid.c ****         0x09, 0x01,        // Usage (Consumer Control)
 293:Core/Src/usbd_hid.c ****         0xA1, 0x01,        // Collection (Application)
 294:Core/Src/usbd_hid.c ****         0x85, HID_MEDIA_REPORT,        //   Report ID (VOLUME_REPORT )
 295:Core/Src/usbd_hid.c ****         0x19, 0x00,        //   Usage Minimum (Unassigned)
 296:Core/Src/usbd_hid.c ****         0x2A, 0x3C, 0x02,  //   Usage Maximum (AC Format)
 297:Core/Src/usbd_hid.c ****         0x15, 0x00,        //   Logical Minimum (0)
 298:Core/Src/usbd_hid.c ****         0x26, 0x3C, 0x02,  //   Logical Maximum (572)
 299:Core/Src/usbd_hid.c ****         0x95, 0x01,        //   Report Count (1)
 300:Core/Src/usbd_hid.c ****         0x75, 0x10,        //   Report Size (16)
 301:Core/Src/usbd_hid.c ****         0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Positi
 302:Core/Src/usbd_hid.c ****         0xC0,              // End Collection
 303:Core/Src/usbd_hid.c **** 
 304:Core/Src/usbd_hid.c ****         // how to format the 3 byte report
 305:Core/Src/usbd_hid.c ****         // byte 0 report ID = 0x02 (VOLUME_REPORT)
 306:Core/Src/usbd_hid.c ****         // byte 1 media code  for ex VOL_UP 0xE9 , VOL_DONW 0xEA ... etc
 307:Core/Src/usbd_hid.c ****         // byte 2  0x00
 308:Core/Src/usbd_hid.c ****         // a second  report with 0 code shal be send to avoid "key repaeat"
 309:Core/Src/usbd_hid.c **** 
 310:Core/Src/usbd_hid.c ****         // 25 bytes
 311:Core/Src/usbd_hid.c **** #endif
 312:Core/Src/usbd_hid.c **** }; 
 313:Core/Src/usbd_hid.c **** 
 314:Core/Src/usbd_hid.c **** uint32_t  nOutData;
 315:Core/Src/usbd_hid.c **** uint8_t OutDataBuffer[HID_EPOUT_SIZE]; // local copy for user (usb fly at same time)
 316:Core/Src/usbd_hid.c **** uint8_t OutData[HID_EPOUT_SIZE]; // live usb buffer
 317:Core/Src/usbd_hid.c **** 
ARM GAS  /tmp/ccEM5Rnn.s 			page 7


 318:Core/Src/usbd_hid.c **** #ifdef DEBUG
 319:Core/Src/usbd_hid.c **** 
 320:Core/Src/usbd_hid.c **** uint8_t OutDataLog[8*HID_EPOUT_SIZE];
 321:Core/Src/usbd_hid.c **** #endif
 322:Core/Src/usbd_hid.c **** /**
 323:Core/Src/usbd_hid.c ****   * @}
 324:Core/Src/usbd_hid.c ****   */ 
 325:Core/Src/usbd_hid.c **** 
 326:Core/Src/usbd_hid.c **** /** @defgroup USBD_HID_Private_Functions
 327:Core/Src/usbd_hid.c ****   * @{
 328:Core/Src/usbd_hid.c ****   */ 
 329:Core/Src/usbd_hid.c **** 
 330:Core/Src/usbd_hid.c **** /**
 331:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_Init
 332:Core/Src/usbd_hid.c ****   *         Initialize the HID interface
 333:Core/Src/usbd_hid.c ****   * @param  pdev: device instance
 334:Core/Src/usbd_hid.c ****   * @param  cfgidx: Configuration index
 335:Core/Src/usbd_hid.c ****   * @retval status
 336:Core/Src/usbd_hid.c ****   */
 337:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_Init (USBD_HandleTypeDef *pdev, 
 338:Core/Src/usbd_hid.c ****                                uint8_t cfgidx)
 339:Core/Src/usbd_hid.c **** {
 340:Core/Src/usbd_hid.c ****   uint8_t ret = 0;
 341:Core/Src/usbd_hid.c ****   
 342:Core/Src/usbd_hid.c ****   /* Open EP IN */
 343:Core/Src/usbd_hid.c ****   USBD_LL_OpenEP(pdev,
 344:Core/Src/usbd_hid.c ****                  HID_EPIN_ADDR,
 345:Core/Src/usbd_hid.c ****                  USBD_EP_TYPE_INTR,
 346:Core/Src/usbd_hid.c ****                  HID_EPIN_SIZE);  
 347:Core/Src/usbd_hid.c **** #if HID_LED_SUPPORT
 348:Core/Src/usbd_hid.c ****     USBD_LL_OpenEP(pdev,
 349:Core/Src/usbd_hid.c ****             HID_EPOUT_ADDR,
 350:Core/Src/usbd_hid.c ****             USBD_EP_TYPE_INTR,
 351:Core/Src/usbd_hid.c ****             HID_EPOUT_SIZE);
 352:Core/Src/usbd_hid.c **** #endif
 353:Core/Src/usbd_hid.c ****   
 354:Core/Src/usbd_hid.c ****   pdev->pClassData = USBD_malloc(sizeof (USBD_HID_HandleTypeDef));
 355:Core/Src/usbd_hid.c ****   
 356:Core/Src/usbd_hid.c ****   if(pdev->pClassData == NULL)
 357:Core/Src/usbd_hid.c ****   {
 358:Core/Src/usbd_hid.c ****     ret = 1;
 359:Core/Src/usbd_hid.c ****   }
 360:Core/Src/usbd_hid.c ****   else
 361:Core/Src/usbd_hid.c ****   {
 362:Core/Src/usbd_hid.c **** #if HID_LED_SUPPORT
 363:Core/Src/usbd_hid.c ****      USBD_LL_PrepareReceive(pdev, HID_EPOUT_ADDR, OutData, HID_EPOUT_SIZE);
 364:Core/Src/usbd_hid.c **** #endif
 365:Core/Src/usbd_hid.c ****     ((USBD_HID_HandleTypeDef *)pdev->pClassData)->state = HID_IDLE;
 366:Core/Src/usbd_hid.c **** 
 367:Core/Src/usbd_hid.c ****   }
 368:Core/Src/usbd_hid.c ****   return ret;
 369:Core/Src/usbd_hid.c **** }
 370:Core/Src/usbd_hid.c **** 
 371:Core/Src/usbd_hid.c **** /**
 372:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_Init
 373:Core/Src/usbd_hid.c ****   *         DeInitialize the HID layer
 374:Core/Src/usbd_hid.c ****   * @param  pdev: device instance
ARM GAS  /tmp/ccEM5Rnn.s 			page 8


 375:Core/Src/usbd_hid.c ****   * @param  cfgidx: Configuration index
 376:Core/Src/usbd_hid.c ****   * @retval status
 377:Core/Src/usbd_hid.c ****   */
 378:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DeInit (USBD_HandleTypeDef *pdev, 
 379:Core/Src/usbd_hid.c ****                                  uint8_t cfgidx)
 380:Core/Src/usbd_hid.c **** {
 381:Core/Src/usbd_hid.c ****   /* Close HID EPs */
 382:Core/Src/usbd_hid.c ****   USBD_LL_CloseEP(pdev,
 383:Core/Src/usbd_hid.c ****                   HID_EPIN_ADDR);
 384:Core/Src/usbd_hid.c ****   
 385:Core/Src/usbd_hid.c ****   USBD_LL_CloseEP(pdev,
 386:Core/Src/usbd_hid.c ****                   HID_EPOUT_ADDR);
 387:Core/Src/usbd_hid.c **** 
 388:Core/Src/usbd_hid.c ****   /* FRee allocated memory */
 389:Core/Src/usbd_hid.c ****   if(pdev->pClassData != NULL)
 390:Core/Src/usbd_hid.c ****   {
 391:Core/Src/usbd_hid.c ****     USBD_free(pdev->pClassData);
 392:Core/Src/usbd_hid.c ****     pdev->pClassData = NULL;
 393:Core/Src/usbd_hid.c ****   } 
 394:Core/Src/usbd_hid.c ****   
 395:Core/Src/usbd_hid.c ****   return USBD_OK;
 396:Core/Src/usbd_hid.c **** }
 397:Core/Src/usbd_hid.c **** 
 398:Core/Src/usbd_hid.c **** /**
 399:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_Setup
 400:Core/Src/usbd_hid.c ****   *         Handle the HID specific requests
 401:Core/Src/usbd_hid.c ****   * @param  pdev: instance
 402:Core/Src/usbd_hid.c ****   * @param  req: usb requests
 403:Core/Src/usbd_hid.c ****   * @retval status
 404:Core/Src/usbd_hid.c ****   */
 405:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_Setup (USBD_HandleTypeDef *pdev, 
 406:Core/Src/usbd_hid.c ****                                 USBD_SetupReqTypedef *req)
 407:Core/Src/usbd_hid.c **** {
 408:Core/Src/usbd_hid.c ****   uint16_t len = 0;
 409:Core/Src/usbd_hid.c ****   uint8_t  *pbuf = NULL;
 410:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*) pdev->pClassData;
 411:Core/Src/usbd_hid.c ****   
 412:Core/Src/usbd_hid.c ****   switch (req->bmRequest & USB_REQ_TYPE_MASK)
 413:Core/Src/usbd_hid.c ****   {
 414:Core/Src/usbd_hid.c ****   case USB_REQ_TYPE_CLASS :  
 415:Core/Src/usbd_hid.c ****     switch (req->bRequest)
 416:Core/Src/usbd_hid.c ****     {
 417:Core/Src/usbd_hid.c ****       
 418:Core/Src/usbd_hid.c ****       
 419:Core/Src/usbd_hid.c ****     case HID_REQ_SET_PROTOCOL:
 420:Core/Src/usbd_hid.c ****       hhid->Protocol = (uint8_t)(req->wValue);
 421:Core/Src/usbd_hid.c ****       break;
 422:Core/Src/usbd_hid.c ****       
 423:Core/Src/usbd_hid.c ****     case HID_REQ_GET_PROTOCOL:
 424:Core/Src/usbd_hid.c ****       USBD_CtlSendData (pdev, 
 425:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->Protocol,
 426:Core/Src/usbd_hid.c ****                         1);    
 427:Core/Src/usbd_hid.c ****       break;
 428:Core/Src/usbd_hid.c ****       
 429:Core/Src/usbd_hid.c ****     case HID_REQ_SET_IDLE:
 430:Core/Src/usbd_hid.c ****       hhid->IdleState = (uint8_t)(req->wValue >> 8);
 431:Core/Src/usbd_hid.c ****       break;
ARM GAS  /tmp/ccEM5Rnn.s 			page 9


 432:Core/Src/usbd_hid.c ****       
 433:Core/Src/usbd_hid.c ****     case HID_REQ_GET_IDLE:
 434:Core/Src/usbd_hid.c ****       USBD_CtlSendData (pdev, 
 435:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->IdleState,
 436:Core/Src/usbd_hid.c ****                         1);        
 437:Core/Src/usbd_hid.c ****       break;      
 438:Core/Src/usbd_hid.c ****       
 439:Core/Src/usbd_hid.c ****     default:
 440:Core/Src/usbd_hid.c ****       USBD_CtlError (pdev, req);
 441:Core/Src/usbd_hid.c ****       return USBD_FAIL; 
 442:Core/Src/usbd_hid.c ****     }
 443:Core/Src/usbd_hid.c ****     break;
 444:Core/Src/usbd_hid.c ****     
 445:Core/Src/usbd_hid.c ****   case USB_REQ_TYPE_STANDARD:
 446:Core/Src/usbd_hid.c ****     switch (req->bRequest)
 447:Core/Src/usbd_hid.c ****     {
 448:Core/Src/usbd_hid.c ****     case USB_REQ_GET_DESCRIPTOR: 
 449:Core/Src/usbd_hid.c ****       if( req->wValue >> 8 == HID_REPORT_DESC)
 450:Core/Src/usbd_hid.c ****       {
 451:Core/Src/usbd_hid.c ****         len = MIN(HID_REPORT_DESC_SIZE , req->wLength);
 452:Core/Src/usbd_hid.c ****         pbuf = HID_ReportDesc;
 453:Core/Src/usbd_hid.c ****       }
 454:Core/Src/usbd_hid.c ****       else if( req->wValue >> 8 == HID_DESCRIPTOR_TYPE)
 455:Core/Src/usbd_hid.c ****       {
 456:Core/Src/usbd_hid.c ****         pbuf = USBD_HID_Desc;   
 457:Core/Src/usbd_hid.c ****         len = MIN(USB_HID_DESC_SIZ , req->wLength);
 458:Core/Src/usbd_hid.c ****       }
 459:Core/Src/usbd_hid.c ****       
 460:Core/Src/usbd_hid.c ****       USBD_CtlSendData (pdev, 
 461:Core/Src/usbd_hid.c ****                         pbuf,
 462:Core/Src/usbd_hid.c ****                         len);
 463:Core/Src/usbd_hid.c ****       
 464:Core/Src/usbd_hid.c ****       break;
 465:Core/Src/usbd_hid.c ****       
 466:Core/Src/usbd_hid.c ****     case USB_REQ_GET_INTERFACE :
 467:Core/Src/usbd_hid.c ****       USBD_CtlSendData (pdev,
 468:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->AltSetting,
 469:Core/Src/usbd_hid.c ****                         1);
 470:Core/Src/usbd_hid.c ****       break;
 471:Core/Src/usbd_hid.c ****       
 472:Core/Src/usbd_hid.c ****     case USB_REQ_SET_INTERFACE :
 473:Core/Src/usbd_hid.c ****       hhid->AltSetting = (uint8_t)(req->wValue);
 474:Core/Src/usbd_hid.c ****       break;
 475:Core/Src/usbd_hid.c ****     }
 476:Core/Src/usbd_hid.c ****   }
 477:Core/Src/usbd_hid.c ****   return USBD_OK;
 478:Core/Src/usbd_hid.c **** }
 479:Core/Src/usbd_hid.c **** 
 480:Core/Src/usbd_hid.c **** /**
 481:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_SendReport 
 482:Core/Src/usbd_hid.c ****   *         Send HID Report
 483:Core/Src/usbd_hid.c ****   * @param  pdev: device instance
 484:Core/Src/usbd_hid.c ****   * @param  buff: pointer to report
 485:Core/Src/usbd_hid.c ****   * @retval status
 486:Core/Src/usbd_hid.c ****   */
 487:Core/Src/usbd_hid.c **** uint8_t USBD_HID_SendReport     (USBD_HandleTypeDef  *pdev, 
 488:Core/Src/usbd_hid.c ****                                  uint8_t *report,
ARM GAS  /tmp/ccEM5Rnn.s 			page 10


 489:Core/Src/usbd_hid.c ****                                  uint16_t len)
 490:Core/Src/usbd_hid.c **** {
 491:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*)pdev->pClassData;
 492:Core/Src/usbd_hid.c ****   
 493:Core/Src/usbd_hid.c ****   if (pdev->dev_state == USBD_STATE_CONFIGURED )
 494:Core/Src/usbd_hid.c ****   {
 495:Core/Src/usbd_hid.c ****     if(hhid->state == HID_IDLE)
 496:Core/Src/usbd_hid.c ****     {
 497:Core/Src/usbd_hid.c ****       hhid->state = HID_BUSY;
 498:Core/Src/usbd_hid.c ****       USBD_LL_Transmit (pdev, 
 499:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 500:Core/Src/usbd_hid.c ****                         report,
 501:Core/Src/usbd_hid.c ****                         len);
 502:Core/Src/usbd_hid.c ****     }
 503:Core/Src/usbd_hid.c ****   }
 504:Core/Src/usbd_hid.c ****   return USBD_OK;
 505:Core/Src/usbd_hid.c **** }
 506:Core/Src/usbd_hid.c **** 
 507:Core/Src/usbd_hid.c **** /**
 508:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_GetPollingInterval 
 509:Core/Src/usbd_hid.c ****   *         return polling interval from endpoint descriptor
 510:Core/Src/usbd_hid.c ****   * @param  pdev: device instance
 511:Core/Src/usbd_hid.c ****   * @retval polling interval
 512:Core/Src/usbd_hid.c ****   */
 513:Core/Src/usbd_hid.c **** uint32_t USBD_HID_GetPollingInterval (USBD_HandleTypeDef *pdev)
 514:Core/Src/usbd_hid.c **** {
 515:Core/Src/usbd_hid.c ****   uint32_t polling_interval = 0;
 516:Core/Src/usbd_hid.c **** 
 517:Core/Src/usbd_hid.c ****   /* HIGH-speed endpoints */
 518:Core/Src/usbd_hid.c ****   if(pdev->dev_speed == USBD_SPEED_HIGH)
 519:Core/Src/usbd_hid.c ****   {
 520:Core/Src/usbd_hid.c ****    /* Sets the data transfer polling interval for high speed transfers. 
 521:Core/Src/usbd_hid.c ****     Values between 1..16 are allowed. Values correspond to interval 
 522:Core/Src/usbd_hid.c ****     of 2 ^ (bInterval-1). This option (8 ms, corresponds to HID_HS_BINTERVAL */
 523:Core/Src/usbd_hid.c ****     polling_interval = (((1 <<(HID_HS_BINTERVAL - 1)))/8);
 524:Core/Src/usbd_hid.c ****   }
 525:Core/Src/usbd_hid.c ****   else   /* LOW and FULL-speed endpoints */
 526:Core/Src/usbd_hid.c ****   {
 527:Core/Src/usbd_hid.c ****     /* Sets the data transfer polling interval for low and full 
 528:Core/Src/usbd_hid.c ****     speed transfers */
 529:Core/Src/usbd_hid.c ****     polling_interval =  HID_FS_BINTERVAL;
 530:Core/Src/usbd_hid.c ****   }
 531:Core/Src/usbd_hid.c ****   
 532:Core/Src/usbd_hid.c ****   return ((uint32_t)(polling_interval));
 533:Core/Src/usbd_hid.c **** }
 534:Core/Src/usbd_hid.c **** 
 535:Core/Src/usbd_hid.c **** /**
 536:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_GetCfgDesc 
 537:Core/Src/usbd_hid.c ****   *         return configuration descriptor
 538:Core/Src/usbd_hid.c ****   * @param  speed : current device speed
 539:Core/Src/usbd_hid.c ****   * @param  length : pointer data length
 540:Core/Src/usbd_hid.c ****   * @retval pointer to descriptor buffer
 541:Core/Src/usbd_hid.c ****   */
 542:Core/Src/usbd_hid.c **** static uint8_t  *USBD_HID_GetCfgDesc (uint16_t *length)
 543:Core/Src/usbd_hid.c **** {
  27              		.loc 1 543 1 view -0
  28              		.cfi_startproc
ARM GAS  /tmp/ccEM5Rnn.s 			page 11


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 544:Core/Src/usbd_hid.c ****   *length = sizeof (USBD_HID_CfgDesc);
  32              		.loc 1 544 3 view .LVU1
  33              		.loc 1 544 11 is_stmt 0 view .LVU2
  34 0000 2223     		movs	r3, #34
  35 0002 0380     		strh	r3, [r0]
 545:Core/Src/usbd_hid.c ****   return USBD_HID_CfgDesc;
  36              		.loc 1 545 3 is_stmt 1 view .LVU3
 546:Core/Src/usbd_hid.c **** }
  37              		.loc 1 546 1 is_stmt 0 view .LVU4
  38 0004 0048     		ldr	r0, .L2
  39              	.LVL1:
  40              		.loc 1 546 1 view .LVU5
  41              		@ sp needed
  42 0006 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0008 00000000 		.word	.LANCHOR0
  47              		.cfi_endproc
  48              	.LFE48:
  50              		.section	.text.USBD_HID_DataIn,"ax",%progbits
  51              		.align	1
  52              		.syntax unified
  53              		.code	16
  54              		.thumb_func
  55              		.fpu softvfp
  57              	USBD_HID_DataIn:
  58              	.LVL2:
  59              	.LFB49:
 547:Core/Src/usbd_hid.c **** 
 548:Core/Src/usbd_hid.c **** 
 549:Core/Src/usbd_hid.c **** /**
 550:Core/Src/usbd_hid.c ****   * @brief  USBD_HID_DataIn
 551:Core/Src/usbd_hid.c ****   *         handle data IN Stage
 552:Core/Src/usbd_hid.c ****   * @param  pdev: device instance
 553:Core/Src/usbd_hid.c ****   * @param  epnum: endpoint index
 554:Core/Src/usbd_hid.c ****   * @retval status
 555:Core/Src/usbd_hid.c ****   */
 556:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DataIn (USBD_HandleTypeDef *pdev, 
 557:Core/Src/usbd_hid.c ****                               uint8_t epnum)
 558:Core/Src/usbd_hid.c **** {
  60              		.loc 1 558 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 559:Core/Src/usbd_hid.c ****   
 560:Core/Src/usbd_hid.c ****   /* Ensure that the FIFO is empty before a new transfer, this condition could 
 561:Core/Src/usbd_hid.c ****   be caused by  a new transfer before the end of the previous transfer */
 562:Core/Src/usbd_hid.c ****   ((USBD_HID_HandleTypeDef *)pdev->pClassData)->state = HID_IDLE;
  65              		.loc 1 562 3 view .LVU7
  66              		.loc 1 562 34 is_stmt 0 view .LVU8
  67 0000 8623     		movs	r3, #134
  68 0002 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccEM5Rnn.s 			page 12


  69 0004 C358     		ldr	r3, [r0, r3]
  70              		.loc 1 562 55 view .LVU9
  71 0006 0022     		movs	r2, #0
  72 0008 1A73     		strb	r2, [r3, #12]
 563:Core/Src/usbd_hid.c ****   return USBD_OK;
  73              		.loc 1 563 3 is_stmt 1 view .LVU10
 564:Core/Src/usbd_hid.c **** }
  74              		.loc 1 564 1 is_stmt 0 view .LVU11
  75 000a 0020     		movs	r0, #0
  76              	.LVL3:
  77              		.loc 1 564 1 view .LVU12
  78              		@ sp needed
  79 000c 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE49:
  83              		.section	.text.USBD_HID_GetDeviceQualifierDesc,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.code	16
  87              		.thumb_func
  88              		.fpu softvfp
  90              	USBD_HID_GetDeviceQualifierDesc:
  91              	.LVL4:
  92              	.LFB52:
 565:Core/Src/usbd_hid.c **** 
 566:Core/Src/usbd_hid.c **** 
 567:Core/Src/usbd_hid.c **** __weak void USBD_HID_GetReport(uint8_t * OutData, int len){
 568:Core/Src/usbd_hid.c ****     /** default do ntohing */
 569:Core/Src/usbd_hid.c **** }
 570:Core/Src/usbd_hid.c **** 
 571:Core/Src/usbd_hid.c **** static uint8_t  USBD_HID_DataOut (USBD_HandleTypeDef *pdev,
 572:Core/Src/usbd_hid.c ****                               uint8_t epnum)
 573:Core/Src/usbd_hid.c **** {
 574:Core/Src/usbd_hid.c ****     int len;
 575:Core/Src/usbd_hid.c **** 
 576:Core/Src/usbd_hid.c **** #ifdef DEBUG
 577:Core/Src/usbd_hid.c ****     memcpy(OutDataLog+((nOutData)%8)*8,OutData,8);
 578:Core/Src/usbd_hid.c **** #endif
 579:Core/Src/usbd_hid.c ****     nOutData++;
 580:Core/Src/usbd_hid.c ****     // data cpy so we can be ready for next usb out and used received data safely
 581:Core/Src/usbd_hid.c ****     len = USBD_LL_GetRxDataSize (pdev, epnum);
 582:Core/Src/usbd_hid.c ****     memcpy(OutDataBuffer,OutData, len);
 583:Core/Src/usbd_hid.c ****     USBD_LL_PrepareReceive(pdev, HID_EPOUT_ADDR, OutData, HID_EPOUT_SIZE);
 584:Core/Src/usbd_hid.c ****     USBD_HID_GetReport(OutDataBuffer, len);
 585:Core/Src/usbd_hid.c ****   return USBD_OK;
 586:Core/Src/usbd_hid.c **** }
 587:Core/Src/usbd_hid.c **** 
 588:Core/Src/usbd_hid.c **** 
 589:Core/Src/usbd_hid.c **** /**
 590:Core/Src/usbd_hid.c **** * @brief  DeviceQualifierDescriptor 
 591:Core/Src/usbd_hid.c **** *         return Device Qualifier descriptor
 592:Core/Src/usbd_hid.c **** * @param  length : pointer data length
 593:Core/Src/usbd_hid.c **** * @retval pointer to descriptor buffer
 594:Core/Src/usbd_hid.c **** */
 595:Core/Src/usbd_hid.c **** static uint8_t  *USBD_HID_GetDeviceQualifierDesc (uint16_t *length)
 596:Core/Src/usbd_hid.c **** {
  93              		.loc 1 596 1 is_stmt 1 view -0
ARM GAS  /tmp/ccEM5Rnn.s 			page 13


  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 597:Core/Src/usbd_hid.c ****   *length = sizeof (USBD_HID_DeviceQualifierDesc);
  98              		.loc 1 597 3 view .LVU14
  99              		.loc 1 597 11 is_stmt 0 view .LVU15
 100 0000 0A23     		movs	r3, #10
 101 0002 0380     		strh	r3, [r0]
 598:Core/Src/usbd_hid.c ****   return USBD_HID_DeviceQualifierDesc;
 102              		.loc 1 598 3 is_stmt 1 view .LVU16
 599:Core/Src/usbd_hid.c **** }
 103              		.loc 1 599 1 is_stmt 0 view .LVU17
 104 0004 0048     		ldr	r0, .L6
 105              	.LVL5:
 106              		.loc 1 599 1 view .LVU18
 107              		@ sp needed
 108 0006 7047     		bx	lr
 109              	.L7:
 110              		.align	2
 111              	.L6:
 112 0008 00000000 		.word	.LANCHOR1
 113              		.cfi_endproc
 114              	.LFE52:
 116              		.section	.text.USBD_HID_Setup,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.code	16
 120              		.thumb_func
 121              		.fpu softvfp
 123              	USBD_HID_Setup:
 124              	.LVL6:
 125              	.LFB45:
 407:Core/Src/usbd_hid.c ****   uint16_t len = 0;
 126              		.loc 1 407 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 407:Core/Src/usbd_hid.c ****   uint16_t len = 0;
 130              		.loc 1 407 1 is_stmt 0 view .LVU20
 131 0000 70B5     		push	{r4, r5, r6, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 16
 134              		.cfi_offset 4, -16
 135              		.cfi_offset 5, -12
 136              		.cfi_offset 6, -8
 137              		.cfi_offset 14, -4
 408:Core/Src/usbd_hid.c ****   uint8_t  *pbuf = NULL;
 138              		.loc 1 408 3 is_stmt 1 view .LVU21
 139              	.LVL7:
 409:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*) pdev->pClassData;
 140              		.loc 1 409 3 view .LVU22
 410:Core/Src/usbd_hid.c ****   
 141              		.loc 1 410 3 view .LVU23
 410:Core/Src/usbd_hid.c ****   
 142              		.loc 1 410 31 is_stmt 0 view .LVU24
 143 0002 8623     		movs	r3, #134
ARM GAS  /tmp/ccEM5Rnn.s 			page 14


 144 0004 9B00     		lsls	r3, r3, #2
 145 0006 C558     		ldr	r5, [r0, r3]
 146              	.LVL8:
 412:Core/Src/usbd_hid.c ****   {
 147              		.loc 1 412 3 is_stmt 1 view .LVU25
 412:Core/Src/usbd_hid.c ****   {
 148              		.loc 1 412 14 is_stmt 0 view .LVU26
 149 0008 0B78     		ldrb	r3, [r1]
 150 000a 6022     		movs	r2, #96
 151 000c 1400     		movs	r4, r2
 152 000e 1C40     		ands	r4, r3
 412:Core/Src/usbd_hid.c ****   {
 153              		.loc 1 412 3 view .LVU27
 154 0010 1A42     		tst	r2, r3
 155 0012 24D0     		beq	.L9
 156 0014 202C     		cmp	r4, #32
 157 0016 4DD1     		bne	.L22
 415:Core/Src/usbd_hid.c ****     {
 158              		.loc 1 415 5 is_stmt 1 view .LVU28
 415:Core/Src/usbd_hid.c ****     {
 159              		.loc 1 415 16 is_stmt 0 view .LVU29
 160 0018 4B78     		ldrb	r3, [r1, #1]
 161 001a 0A2B     		cmp	r3, #10
 162 001c 10D0     		beq	.L11
 163 001e 09D8     		bhi	.L12
 164 0020 022B     		cmp	r3, #2
 165 0022 12D0     		beq	.L13
 166 0024 032B     		cmp	r3, #3
 167 0026 16D1     		bne	.L15
 424:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->Protocol,
 168              		.loc 1 424 7 is_stmt 1 view .LVU30
 169 0028 0122     		movs	r2, #1
 170 002a 2900     		movs	r1, r5
 171              	.LVL9:
 424:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->Protocol,
 172              		.loc 1 424 7 is_stmt 0 view .LVU31
 173 002c FFF7FEFF 		bl	USBD_CtlSendData
 174              	.LVL10:
 427:Core/Src/usbd_hid.c ****       
 175              		.loc 1 427 7 is_stmt 1 view .LVU32
 477:Core/Src/usbd_hid.c **** }
 176              		.loc 1 477 10 is_stmt 0 view .LVU33
 177 0030 0024     		movs	r4, #0
 427:Core/Src/usbd_hid.c ****       
 178              		.loc 1 427 7 view .LVU34
 179 0032 40E0     		b	.L10
 180              	.LVL11:
 181              	.L12:
 427:Core/Src/usbd_hid.c ****       
 182              		.loc 1 427 7 view .LVU35
 183 0034 0B2B     		cmp	r3, #11
 184 0036 0ED1     		bne	.L15
 420:Core/Src/usbd_hid.c ****       break;
 185              		.loc 1 420 7 is_stmt 1 view .LVU36
 420:Core/Src/usbd_hid.c ****       break;
 186              		.loc 1 420 24 is_stmt 0 view .LVU37
 187 0038 8B78     		ldrb	r3, [r1, #2]
ARM GAS  /tmp/ccEM5Rnn.s 			page 15


 420:Core/Src/usbd_hid.c ****       break;
 188              		.loc 1 420 22 view .LVU38
 189 003a 2B60     		str	r3, [r5]
 421:Core/Src/usbd_hid.c ****       
 190              		.loc 1 421 7 is_stmt 1 view .LVU39
 477:Core/Src/usbd_hid.c **** }
 191              		.loc 1 477 10 is_stmt 0 view .LVU40
 192 003c 0024     		movs	r4, #0
 421:Core/Src/usbd_hid.c ****       
 193              		.loc 1 421 7 view .LVU41
 194 003e 3AE0     		b	.L10
 195              	.L11:
 430:Core/Src/usbd_hid.c ****       break;
 196              		.loc 1 430 7 is_stmt 1 view .LVU42
 430:Core/Src/usbd_hid.c ****       break;
 197              		.loc 1 430 38 is_stmt 0 view .LVU43
 198 0040 4B88     		ldrh	r3, [r1, #2]
 430:Core/Src/usbd_hid.c ****       break;
 199              		.loc 1 430 25 view .LVU44
 200 0042 1B0A     		lsrs	r3, r3, #8
 430:Core/Src/usbd_hid.c ****       break;
 201              		.loc 1 430 23 view .LVU45
 202 0044 6B60     		str	r3, [r5, #4]
 431:Core/Src/usbd_hid.c ****       
 203              		.loc 1 431 7 is_stmt 1 view .LVU46
 477:Core/Src/usbd_hid.c **** }
 204              		.loc 1 477 10 is_stmt 0 view .LVU47
 205 0046 0024     		movs	r4, #0
 431:Core/Src/usbd_hid.c ****       
 206              		.loc 1 431 7 view .LVU48
 207 0048 35E0     		b	.L10
 208              	.L13:
 434:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->IdleState,
 209              		.loc 1 434 7 is_stmt 1 view .LVU49
 435:Core/Src/usbd_hid.c ****                         1);        
 210              		.loc 1 435 36 is_stmt 0 view .LVU50
 211 004a 291D     		adds	r1, r5, #4
 212              	.LVL12:
 434:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->IdleState,
 213              		.loc 1 434 7 view .LVU51
 214 004c 0122     		movs	r2, #1
 215 004e FFF7FEFF 		bl	USBD_CtlSendData
 216              	.LVL13:
 437:Core/Src/usbd_hid.c ****       
 217              		.loc 1 437 7 is_stmt 1 view .LVU52
 477:Core/Src/usbd_hid.c **** }
 218              		.loc 1 477 10 is_stmt 0 view .LVU53
 219 0052 0024     		movs	r4, #0
 437:Core/Src/usbd_hid.c ****       
 220              		.loc 1 437 7 view .LVU54
 221 0054 2FE0     		b	.L10
 222              	.LVL14:
 223              	.L15:
 440:Core/Src/usbd_hid.c ****       return USBD_FAIL; 
 224              		.loc 1 440 7 is_stmt 1 view .LVU55
 225 0056 FFF7FEFF 		bl	USBD_CtlError
 226              	.LVL15:
ARM GAS  /tmp/ccEM5Rnn.s 			page 16


 441:Core/Src/usbd_hid.c ****     }
 227              		.loc 1 441 7 view .LVU56
 441:Core/Src/usbd_hid.c ****     }
 228              		.loc 1 441 14 is_stmt 0 view .LVU57
 229 005a 0224     		movs	r4, #2
 230 005c 2BE0     		b	.L10
 231              	.LVL16:
 232              	.L9:
 446:Core/Src/usbd_hid.c ****     {
 233              		.loc 1 446 5 is_stmt 1 view .LVU58
 446:Core/Src/usbd_hid.c ****     {
 234              		.loc 1 446 16 is_stmt 0 view .LVU59
 235 005e 4B78     		ldrb	r3, [r1, #1]
 236 0060 0A2B     		cmp	r3, #10
 237 0062 1ED0     		beq	.L16
 238 0064 0B2B     		cmp	r3, #11
 239 0066 22D0     		beq	.L17
 240 0068 062B     		cmp	r3, #6
 241 006a 24D1     		bne	.L10
 449:Core/Src/usbd_hid.c ****       {
 242              		.loc 1 449 7 is_stmt 1 view .LVU60
 449:Core/Src/usbd_hid.c ****       {
 243              		.loc 1 449 14 is_stmt 0 view .LVU61
 244 006c 4B88     		ldrh	r3, [r1, #2]
 449:Core/Src/usbd_hid.c ****       {
 245              		.loc 1 449 28 view .LVU62
 246 006e 1B0A     		lsrs	r3, r3, #8
 449:Core/Src/usbd_hid.c ****       {
 247              		.loc 1 449 9 view .LVU63
 248 0070 222B     		cmp	r3, #34
 249 0072 06D0     		beq	.L24
 454:Core/Src/usbd_hid.c ****       {
 250              		.loc 1 454 12 is_stmt 1 view .LVU64
 454:Core/Src/usbd_hid.c ****       {
 251              		.loc 1 454 14 is_stmt 0 view .LVU65
 252 0074 212B     		cmp	r3, #33
 253 0076 0CD0     		beq	.L25
 409:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*) pdev->pClassData;
 254              		.loc 1 409 13 view .LVU66
 255 0078 0021     		movs	r1, #0
 256              	.LVL17:
 408:Core/Src/usbd_hid.c ****   uint8_t  *pbuf = NULL;
 257              		.loc 1 408 12 view .LVU67
 258 007a 0022     		movs	r2, #0
 259              	.LVL18:
 260              	.L20:
 460:Core/Src/usbd_hid.c ****                         pbuf,
 261              		.loc 1 460 7 is_stmt 1 view .LVU68
 262 007c FFF7FEFF 		bl	USBD_CtlSendData
 263              	.LVL19:
 464:Core/Src/usbd_hid.c ****       
 264              		.loc 1 464 7 view .LVU69
 265 0080 19E0     		b	.L10
 266              	.LVL20:
 267              	.L24:
 451:Core/Src/usbd_hid.c ****         pbuf = HID_ReportDesc;
 268              		.loc 1 451 9 view .LVU70
ARM GAS  /tmp/ccEM5Rnn.s 			page 17


 451:Core/Src/usbd_hid.c ****         pbuf = HID_ReportDesc;
 269              		.loc 1 451 15 is_stmt 0 view .LVU71
 270 0082 CB88     		ldrh	r3, [r1, #6]
 451:Core/Src/usbd_hid.c ****         pbuf = HID_ReportDesc;
 271              		.loc 1 451 13 view .LVU72
 272 0084 1A1C     		adds	r2, r3, #0
 273 0086 482B     		cmp	r3, #72
 274 0088 00D9     		bls	.L19
 275 008a 4822     		movs	r2, #72
 276              	.L19:
 277 008c 92B2     		uxth	r2, r2
 278              	.LVL21:
 452:Core/Src/usbd_hid.c ****       }
 279              		.loc 1 452 9 is_stmt 1 view .LVU73
 452:Core/Src/usbd_hid.c ****       }
 280              		.loc 1 452 14 is_stmt 0 view .LVU74
 281 008e 0B49     		ldr	r1, .L26
 282              	.LVL22:
 452:Core/Src/usbd_hid.c ****       }
 283              		.loc 1 452 14 view .LVU75
 284 0090 F4E7     		b	.L20
 285              	.LVL23:
 286              	.L25:
 456:Core/Src/usbd_hid.c ****         len = MIN(USB_HID_DESC_SIZ , req->wLength);
 287              		.loc 1 456 9 is_stmt 1 view .LVU76
 457:Core/Src/usbd_hid.c ****       }
 288              		.loc 1 457 9 view .LVU77
 457:Core/Src/usbd_hid.c ****       }
 289              		.loc 1 457 15 is_stmt 0 view .LVU78
 290 0092 CB88     		ldrh	r3, [r1, #6]
 457:Core/Src/usbd_hid.c ****       }
 291              		.loc 1 457 13 view .LVU79
 292 0094 1A1C     		adds	r2, r3, #0
 293 0096 092B     		cmp	r3, #9
 294 0098 00D9     		bls	.L21
 295 009a 0922     		movs	r2, #9
 296              	.L21:
 297 009c 92B2     		uxth	r2, r2
 298              	.LVL24:
 456:Core/Src/usbd_hid.c ****         len = MIN(USB_HID_DESC_SIZ , req->wLength);
 299              		.loc 1 456 14 view .LVU80
 300 009e 0849     		ldr	r1, .L26+4
 301              	.LVL25:
 456:Core/Src/usbd_hid.c ****         len = MIN(USB_HID_DESC_SIZ , req->wLength);
 302              		.loc 1 456 14 view .LVU81
 303 00a0 ECE7     		b	.L20
 304              	.LVL26:
 305              	.L16:
 467:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->AltSetting,
 306              		.loc 1 467 7 is_stmt 1 view .LVU82
 468:Core/Src/usbd_hid.c ****                         1);
 307              		.loc 1 468 36 is_stmt 0 view .LVU83
 308 00a2 2900     		movs	r1, r5
 309              	.LVL27:
 468:Core/Src/usbd_hid.c ****                         1);
 310              		.loc 1 468 36 view .LVU84
 311 00a4 0831     		adds	r1, r1, #8
ARM GAS  /tmp/ccEM5Rnn.s 			page 18


 467:Core/Src/usbd_hid.c ****                         (uint8_t *)&hhid->AltSetting,
 312              		.loc 1 467 7 view .LVU85
 313 00a6 0122     		movs	r2, #1
 314 00a8 FFF7FEFF 		bl	USBD_CtlSendData
 315              	.LVL28:
 470:Core/Src/usbd_hid.c ****       
 316              		.loc 1 470 7 is_stmt 1 view .LVU86
 317 00ac 03E0     		b	.L10
 318              	.LVL29:
 319              	.L17:
 473:Core/Src/usbd_hid.c ****       break;
 320              		.loc 1 473 7 view .LVU87
 473:Core/Src/usbd_hid.c ****       break;
 321              		.loc 1 473 26 is_stmt 0 view .LVU88
 322 00ae 8B78     		ldrb	r3, [r1, #2]
 473:Core/Src/usbd_hid.c ****       break;
 323              		.loc 1 473 24 view .LVU89
 324 00b0 AB60     		str	r3, [r5, #8]
 474:Core/Src/usbd_hid.c ****     }
 325              		.loc 1 474 7 is_stmt 1 view .LVU90
 326 00b2 00E0     		b	.L10
 327              	.L22:
 412:Core/Src/usbd_hid.c ****   {
 328              		.loc 1 412 3 is_stmt 0 view .LVU91
 329 00b4 0024     		movs	r4, #0
 330              	.LVL30:
 331              	.L10:
 478:Core/Src/usbd_hid.c **** 
 332              		.loc 1 478 1 view .LVU92
 333 00b6 2000     		movs	r0, r4
 334              		@ sp needed
 335              	.LVL31:
 478:Core/Src/usbd_hid.c **** 
 336              		.loc 1 478 1 view .LVU93
 337 00b8 70BD     		pop	{r4, r5, r6, pc}
 338              	.L27:
 339 00ba C046     		.align	2
 340              	.L26:
 341 00bc 00000000 		.word	.LANCHOR2
 342 00c0 00000000 		.word	.LANCHOR3
 343              		.cfi_endproc
 344              	.LFE45:
 346              		.section	.text.USBD_HID_DeInit,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	USBD_HID_DeInit:
 354              	.LVL32:
 355              	.LFB44:
 380:Core/Src/usbd_hid.c ****   /* Close HID EPs */
 356              		.loc 1 380 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 380:Core/Src/usbd_hid.c ****   /* Close HID EPs */
ARM GAS  /tmp/ccEM5Rnn.s 			page 19


 360              		.loc 1 380 1 is_stmt 0 view .LVU95
 361 0000 10B5     		push	{r4, lr}
 362              	.LCFI1:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 366 0002 0400     		movs	r4, r0
 382:Core/Src/usbd_hid.c ****                   HID_EPIN_ADDR);
 367              		.loc 1 382 3 is_stmt 1 view .LVU96
 368 0004 8121     		movs	r1, #129
 369              	.LVL33:
 382:Core/Src/usbd_hid.c ****                   HID_EPIN_ADDR);
 370              		.loc 1 382 3 is_stmt 0 view .LVU97
 371 0006 FFF7FEFF 		bl	USBD_LL_CloseEP
 372              	.LVL34:
 385:Core/Src/usbd_hid.c ****                   HID_EPOUT_ADDR);
 373              		.loc 1 385 3 is_stmt 1 view .LVU98
 374 000a 0121     		movs	r1, #1
 375 000c 2000     		movs	r0, r4
 376 000e FFF7FEFF 		bl	USBD_LL_CloseEP
 377              	.LVL35:
 389:Core/Src/usbd_hid.c ****   {
 378              		.loc 1 389 3 view .LVU99
 389:Core/Src/usbd_hid.c ****   {
 379              		.loc 1 389 10 is_stmt 0 view .LVU100
 380 0012 8623     		movs	r3, #134
 381 0014 9B00     		lsls	r3, r3, #2
 382 0016 E058     		ldr	r0, [r4, r3]
 389:Core/Src/usbd_hid.c ****   {
 383              		.loc 1 389 5 view .LVU101
 384 0018 0028     		cmp	r0, #0
 385 001a 05D0     		beq	.L29
 391:Core/Src/usbd_hid.c ****     pdev->pClassData = NULL;
 386              		.loc 1 391 5 is_stmt 1 view .LVU102
 387 001c FFF7FEFF 		bl	free
 388              	.LVL36:
 392:Core/Src/usbd_hid.c ****   } 
 389              		.loc 1 392 5 view .LVU103
 392:Core/Src/usbd_hid.c ****   } 
 390              		.loc 1 392 22 is_stmt 0 view .LVU104
 391 0020 8623     		movs	r3, #134
 392 0022 9B00     		lsls	r3, r3, #2
 393 0024 0022     		movs	r2, #0
 394 0026 E250     		str	r2, [r4, r3]
 395              	.L29:
 395:Core/Src/usbd_hid.c **** }
 396              		.loc 1 395 3 is_stmt 1 view .LVU105
 396:Core/Src/usbd_hid.c **** 
 397              		.loc 1 396 1 is_stmt 0 view .LVU106
 398 0028 0020     		movs	r0, #0
 399              		@ sp needed
 400              	.LVL37:
 396:Core/Src/usbd_hid.c **** 
 401              		.loc 1 396 1 view .LVU107
 402 002a 10BD     		pop	{r4, pc}
 403              		.cfi_endproc
 404              	.LFE44:
ARM GAS  /tmp/ccEM5Rnn.s 			page 20


 406              		.section	.text.USBD_HID_Init,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.code	16
 410              		.thumb_func
 411              		.fpu softvfp
 413              	USBD_HID_Init:
 414              	.LVL38:
 415              	.LFB43:
 339:Core/Src/usbd_hid.c ****   uint8_t ret = 0;
 416              		.loc 1 339 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 339:Core/Src/usbd_hid.c ****   uint8_t ret = 0;
 420              		.loc 1 339 1 is_stmt 0 view .LVU109
 421 0000 10B5     		push	{r4, lr}
 422              	.LCFI2:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 4, -8
 425              		.cfi_offset 14, -4
 426 0002 0400     		movs	r4, r0
 340:Core/Src/usbd_hid.c ****   
 427              		.loc 1 340 3 is_stmt 1 view .LVU110
 428              	.LVL39:
 343:Core/Src/usbd_hid.c ****                  HID_EPIN_ADDR,
 429              		.loc 1 343 3 view .LVU111
 430 0004 1023     		movs	r3, #16
 431 0006 0322     		movs	r2, #3
 432 0008 8121     		movs	r1, #129
 433              	.LVL40:
 343:Core/Src/usbd_hid.c ****                  HID_EPIN_ADDR,
 434              		.loc 1 343 3 is_stmt 0 view .LVU112
 435 000a FFF7FEFF 		bl	USBD_LL_OpenEP
 436              	.LVL41:
 354:Core/Src/usbd_hid.c ****   
 437              		.loc 1 354 3 is_stmt 1 view .LVU113
 354:Core/Src/usbd_hid.c ****   
 438              		.loc 1 354 22 is_stmt 0 view .LVU114
 439 000e 1020     		movs	r0, #16
 440 0010 FFF7FEFF 		bl	malloc
 441              	.LVL42:
 354:Core/Src/usbd_hid.c ****   
 442              		.loc 1 354 20 view .LVU115
 443 0014 8623     		movs	r3, #134
 444 0016 9B00     		lsls	r3, r3, #2
 445 0018 E050     		str	r0, [r4, r3]
 356:Core/Src/usbd_hid.c ****   {
 446              		.loc 1 356 3 is_stmt 1 view .LVU116
 356:Core/Src/usbd_hid.c ****   {
 447              		.loc 1 356 5 is_stmt 0 view .LVU117
 448 001a 0028     		cmp	r0, #0
 449 001c 03D0     		beq	.L32
 365:Core/Src/usbd_hid.c **** 
 450              		.loc 1 365 5 is_stmt 1 view .LVU118
 365:Core/Src/usbd_hid.c **** 
 451              		.loc 1 365 57 is_stmt 0 view .LVU119
ARM GAS  /tmp/ccEM5Rnn.s 			page 21


 452 001e 0023     		movs	r3, #0
 453 0020 0373     		strb	r3, [r0, #12]
 340:Core/Src/usbd_hid.c ****   
 454              		.loc 1 340 11 view .LVU120
 455 0022 0020     		movs	r0, #0
 456              	.L31:
 457              	.LVL43:
 368:Core/Src/usbd_hid.c **** }
 458              		.loc 1 368 3 is_stmt 1 view .LVU121
 369:Core/Src/usbd_hid.c **** 
 459              		.loc 1 369 1 is_stmt 0 view .LVU122
 460              		@ sp needed
 461              	.LVL44:
 369:Core/Src/usbd_hid.c **** 
 462              		.loc 1 369 1 view .LVU123
 463 0024 10BD     		pop	{r4, pc}
 464              	.LVL45:
 465              	.L32:
 358:Core/Src/usbd_hid.c ****   }
 466              		.loc 1 358 9 view .LVU124
 467 0026 0120     		movs	r0, #1
 468 0028 FCE7     		b	.L31
 469              		.cfi_endproc
 470              	.LFE43:
 472              		.section	.text.USBD_HID_SendReport,"ax",%progbits
 473              		.align	1
 474              		.global	USBD_HID_SendReport
 475              		.syntax unified
 476              		.code	16
 477              		.thumb_func
 478              		.fpu softvfp
 480              	USBD_HID_SendReport:
 481              	.LVL46:
 482              	.LFB46:
 490:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*)pdev->pClassData;
 483              		.loc 1 490 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 490:Core/Src/usbd_hid.c ****   USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef*)pdev->pClassData;
 487              		.loc 1 490 1 is_stmt 0 view .LVU126
 488 0000 10B5     		push	{r4, lr}
 489              	.LCFI3:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 491:Core/Src/usbd_hid.c ****   
 493              		.loc 1 491 3 is_stmt 1 view .LVU127
 491:Core/Src/usbd_hid.c ****   
 494              		.loc 1 491 31 is_stmt 0 view .LVU128
 495 0002 8624     		movs	r4, #134
 496 0004 A400     		lsls	r4, r4, #2
 497 0006 0359     		ldr	r3, [r0, r4]
 498              	.LVL47:
 493:Core/Src/usbd_hid.c ****   {
 499              		.loc 1 493 3 is_stmt 1 view .LVU129
 493:Core/Src/usbd_hid.c ****   {
ARM GAS  /tmp/ccEM5Rnn.s 			page 22


 500              		.loc 1 493 11 is_stmt 0 view .LVU130
 501 0008 1C3C     		subs	r4, r4, #28
 502 000a 045D     		ldrb	r4, [r0, r4]
 493:Core/Src/usbd_hid.c ****   {
 503              		.loc 1 493 6 view .LVU131
 504 000c 032C     		cmp	r4, #3
 505 000e 01D0     		beq	.L35
 506              	.LVL48:
 507              	.L34:
 504:Core/Src/usbd_hid.c **** }
 508              		.loc 1 504 3 is_stmt 1 view .LVU132
 505:Core/Src/usbd_hid.c **** 
 509              		.loc 1 505 1 is_stmt 0 view .LVU133
 510 0010 0020     		movs	r0, #0
 511              		@ sp needed
 512 0012 10BD     		pop	{r4, pc}
 513              	.LVL49:
 514              	.L35:
 495:Core/Src/usbd_hid.c ****     {
 515              		.loc 1 495 5 is_stmt 1 view .LVU134
 495:Core/Src/usbd_hid.c ****     {
 516              		.loc 1 495 12 is_stmt 0 view .LVU135
 517 0014 1C7B     		ldrb	r4, [r3, #12]
 495:Core/Src/usbd_hid.c ****     {
 518              		.loc 1 495 7 view .LVU136
 519 0016 002C     		cmp	r4, #0
 520 0018 FAD1     		bne	.L34
 497:Core/Src/usbd_hid.c ****       USBD_LL_Transmit (pdev, 
 521              		.loc 1 497 7 is_stmt 1 view .LVU137
 497:Core/Src/usbd_hid.c ****       USBD_LL_Transmit (pdev, 
 522              		.loc 1 497 19 is_stmt 0 view .LVU138
 523 001a 0134     		adds	r4, r4, #1
 524 001c 1C73     		strb	r4, [r3, #12]
 498:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 525              		.loc 1 498 7 is_stmt 1 view .LVU139
 526 001e 1300     		movs	r3, r2
 527              	.LVL50:
 498:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 528              		.loc 1 498 7 is_stmt 0 view .LVU140
 529 0020 0A00     		movs	r2, r1
 530              	.LVL51:
 498:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 531              		.loc 1 498 7 view .LVU141
 532 0022 8121     		movs	r1, #129
 533              	.LVL52:
 498:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 534              		.loc 1 498 7 view .LVU142
 535 0024 FFF7FEFF 		bl	USBD_LL_Transmit
 536              	.LVL53:
 498:Core/Src/usbd_hid.c ****                         HID_EPIN_ADDR,                                      
 537              		.loc 1 498 7 view .LVU143
 538 0028 F2E7     		b	.L34
 539              		.cfi_endproc
 540              	.LFE46:
 542              		.section	.text.USBD_HID_GetPollingInterval,"ax",%progbits
 543              		.align	1
 544              		.global	USBD_HID_GetPollingInterval
ARM GAS  /tmp/ccEM5Rnn.s 			page 23


 545              		.syntax unified
 546              		.code	16
 547              		.thumb_func
 548              		.fpu softvfp
 550              	USBD_HID_GetPollingInterval:
 551              	.LVL54:
 552              	.LFB47:
 514:Core/Src/usbd_hid.c ****   uint32_t polling_interval = 0;
 553              		.loc 1 514 1 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 515:Core/Src/usbd_hid.c **** 
 558              		.loc 1 515 3 view .LVU145
 518:Core/Src/usbd_hid.c ****   {
 559              		.loc 1 518 3 view .LVU146
 518:Core/Src/usbd_hid.c ****   {
 560              		.loc 1 518 10 is_stmt 0 view .LVU147
 561 0000 037C     		ldrb	r3, [r0, #16]
 518:Core/Src/usbd_hid.c ****   {
 562              		.loc 1 518 5 view .LVU148
 563 0002 002B     		cmp	r3, #0
 564 0004 01D1     		bne	.L38
 523:Core/Src/usbd_hid.c ****   }
 565              		.loc 1 523 22 view .LVU149
 566 0006 0820     		movs	r0, #8
 567              	.LVL55:
 568              	.L36:
 533:Core/Src/usbd_hid.c **** 
 569              		.loc 1 533 1 view .LVU150
 570              		@ sp needed
 571 0008 7047     		bx	lr
 572              	.LVL56:
 573              	.L38:
 529:Core/Src/usbd_hid.c ****   }
 574              		.loc 1 529 22 view .LVU151
 575 000a 0A20     		movs	r0, #10
 576              	.LVL57:
 532:Core/Src/usbd_hid.c **** }
 577              		.loc 1 532 3 is_stmt 1 view .LVU152
 532:Core/Src/usbd_hid.c **** }
 578              		.loc 1 532 11 is_stmt 0 view .LVU153
 579 000c FCE7     		b	.L36
 580              		.cfi_endproc
 581              	.LFE47:
 583              		.section	.text.USBD_HID_GetReport,"ax",%progbits
 584              		.align	1
 585              		.weak	USBD_HID_GetReport
 586              		.syntax unified
 587              		.code	16
 588              		.thumb_func
 589              		.fpu softvfp
 591              	USBD_HID_GetReport:
 592              	.LVL58:
 593              	.LFB50:
 567:Core/Src/usbd_hid.c ****     /** default do ntohing */
ARM GAS  /tmp/ccEM5Rnn.s 			page 24


 594              		.loc 1 567 59 is_stmt 1 view -0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 569:Core/Src/usbd_hid.c **** 
 599              		.loc 1 569 1 view .LVU155
 600              		@ sp needed
 601 0000 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE50:
 605              		.section	.text.USBD_HID_DataOut,"ax",%progbits
 606              		.align	1
 607              		.syntax unified
 608              		.code	16
 609              		.thumb_func
 610              		.fpu softvfp
 612              	USBD_HID_DataOut:
 613              	.LVL59:
 614              	.LFB51:
 573:Core/Src/usbd_hid.c ****     int len;
 615              		.loc 1 573 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 573:Core/Src/usbd_hid.c ****     int len;
 619              		.loc 1 573 1 is_stmt 0 view .LVU157
 620 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 621              	.LCFI4:
 622              		.cfi_def_cfa_offset 24
 623              		.cfi_offset 3, -24
 624              		.cfi_offset 4, -20
 625              		.cfi_offset 5, -16
 626              		.cfi_offset 6, -12
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 0500     		movs	r5, r0
 574:Core/Src/usbd_hid.c **** 
 630              		.loc 1 574 5 is_stmt 1 view .LVU158
 579:Core/Src/usbd_hid.c ****     // data cpy so we can be ready for next usb out and used received data safely
 631              		.loc 1 579 5 view .LVU159
 579:Core/Src/usbd_hid.c ****     // data cpy so we can be ready for next usb out and used received data safely
 632              		.loc 1 579 13 is_stmt 0 view .LVU160
 633 0004 0C4A     		ldr	r2, .L41
 634 0006 1368     		ldr	r3, [r2]
 635 0008 0133     		adds	r3, r3, #1
 636 000a 1360     		str	r3, [r2]
 581:Core/Src/usbd_hid.c ****     memcpy(OutDataBuffer,OutData, len);
 637              		.loc 1 581 5 is_stmt 1 view .LVU161
 581:Core/Src/usbd_hid.c ****     memcpy(OutDataBuffer,OutData, len);
 638              		.loc 1 581 11 is_stmt 0 view .LVU162
 639 000c FFF7FEFF 		bl	USBD_LL_GetRxDataSize
 640              	.LVL60:
 581:Core/Src/usbd_hid.c ****     memcpy(OutDataBuffer,OutData, len);
 641              		.loc 1 581 11 view .LVU163
 642 0010 0400     		movs	r4, r0
 643              	.LVL61:
ARM GAS  /tmp/ccEM5Rnn.s 			page 25


 582:Core/Src/usbd_hid.c ****     USBD_LL_PrepareReceive(pdev, HID_EPOUT_ADDR, OutData, HID_EPOUT_SIZE);
 644              		.loc 1 582 5 is_stmt 1 view .LVU164
 645 0012 0A4E     		ldr	r6, .L41+4
 646 0014 0A4F     		ldr	r7, .L41+8
 647 0016 0200     		movs	r2, r0
 648 0018 3900     		movs	r1, r7
 649 001a 3000     		movs	r0, r6
 650              	.LVL62:
 582:Core/Src/usbd_hid.c ****     USBD_LL_PrepareReceive(pdev, HID_EPOUT_ADDR, OutData, HID_EPOUT_SIZE);
 651              		.loc 1 582 5 is_stmt 0 view .LVU165
 652 001c FFF7FEFF 		bl	memcpy
 653              	.LVL63:
 583:Core/Src/usbd_hid.c ****     USBD_HID_GetReport(OutDataBuffer, len);
 654              		.loc 1 583 5 is_stmt 1 view .LVU166
 655 0020 0823     		movs	r3, #8
 656 0022 3A00     		movs	r2, r7
 657 0024 0121     		movs	r1, #1
 658 0026 2800     		movs	r0, r5
 659 0028 FFF7FEFF 		bl	USBD_LL_PrepareReceive
 660              	.LVL64:
 584:Core/Src/usbd_hid.c ****   return USBD_OK;
 661              		.loc 1 584 5 view .LVU167
 662 002c 2100     		movs	r1, r4
 663 002e 3000     		movs	r0, r6
 664 0030 FFF7FEFF 		bl	USBD_HID_GetReport
 665              	.LVL65:
 585:Core/Src/usbd_hid.c **** }
 666              		.loc 1 585 3 view .LVU168
 586:Core/Src/usbd_hid.c **** 
 667              		.loc 1 586 1 is_stmt 0 view .LVU169
 668 0034 0020     		movs	r0, #0
 669              		@ sp needed
 670              	.LVL66:
 671              	.LVL67:
 586:Core/Src/usbd_hid.c **** 
 672              		.loc 1 586 1 view .LVU170
 673 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 674              	.L42:
 675              		.align	2
 676              	.L41:
 677 0038 00000000 		.word	nOutData
 678 003c 00000000 		.word	OutDataBuffer
 679 0040 00000000 		.word	OutData
 680              		.cfi_endproc
 681              	.LFE51:
 683              		.comm	OutData,8,4
 684              		.comm	OutDataBuffer,8,4
 685              		.comm	nOutData,4,4
 686              		.global	USBD_HID
 687              		.section	.data.HID_ReportDesc,"aw"
 688              		.align	2
 689              		.set	.LANCHOR2,. + 0
 692              	HID_ReportDesc:
 693 0000 05010906 		.ascii	"\005\001\011\006\241\001\205\001\005\007\031\340)\347"
 693      A1018501 
 693      050719E0 
 693      29E7
ARM GAS  /tmp/ccEM5Rnn.s 			page 26


 694 000e 15002501 		.ascii	"\025\000%\001u\001\225\010\201\002\225\001u\010\201"
 694      75019508 
 694      81029501 
 694      750881
 695 001d 03950675 		.ascii	"\003\225\006u\010\025\000%e\005\007\031\000)e\201\000"
 695      08150025 
 695      65050719 
 695      00296581 
 695      00
 696 002e C0050C09 		.ascii	"\300\005\014\011\001\241\001\205\002\031\000*<\002\025"
 696      01A10185 
 696      0219002A 
 696      3C0215
 697 003d 00263C02 		.ascii	"\000&<\002\225\001u\020\201\000\300"
 697      95017510 
 697      8100C0
 698              		.section	.data.USBD_HID,"aw"
 699              		.align	2
 702              	USBD_HID:
 703 0000 00000000 		.word	USBD_HID_Init
 704 0004 00000000 		.word	USBD_HID_DeInit
 705 0008 00000000 		.word	USBD_HID_Setup
 706 000c 00000000 		.word	0
 707 0010 00000000 		.word	0
 708 0014 00000000 		.word	USBD_HID_DataIn
 709 0018 00000000 		.word	USBD_HID_DataOut
 710 001c 00000000 		.word	0
 711 0020 00000000 		.word	0
 712 0024 00000000 		.word	0
 713 0028 00000000 		.word	USBD_HID_GetCfgDesc
 714 002c 00000000 		.word	USBD_HID_GetCfgDesc
 715 0030 00000000 		.word	USBD_HID_GetCfgDesc
 716 0034 00000000 		.word	USBD_HID_GetDeviceQualifierDesc
 717              		.section	.data.USBD_HID_CfgDesc,"aw"
 718              		.align	2
 719              		.set	.LANCHOR0,. + 0
 722              	USBD_HID_CfgDesc:
 723 0000 09022200 		.ascii	"\011\002\"\000\001\001\000\3402\011\004\000\000\001"
 723      010100E0 
 723      32090400 
 723      0001
 724 000e 03010100 		.ascii	"\003\001\001\000\011!\021\001\000\001\"H\000\007\005"
 724      09211101 
 724      00012248 
 724      000705
 725 001d 81031000 		.ascii	"\201\003\020\000\012"
 725      0A
 726              		.section	.data.USBD_HID_Desc,"aw"
 727              		.align	2
 728              		.set	.LANCHOR3,. + 0
 731              	USBD_HID_Desc:
 732 0000 09211101 		.ascii	"\011!\021\001\000\001\"H\000"
 732      00012248 
 732      00
 733              		.section	.data.USBD_HID_DeviceQualifierDesc,"aw"
 734              		.align	2
 735              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccEM5Rnn.s 			page 27


 738              	USBD_HID_DeviceQualifierDesc:
 739 0000 0A060002 		.ascii	"\012\006\000\002\000\000\000@\001\000"
 739      00000040 
 739      0100
 740              		.text
 741              	.Letext0:
 742              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 743              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 744              		.file 4 "/usr/include/newlib/sys/_types.h"
 745              		.file 5 "/usr/include/newlib/sys/reent.h"
 746              		.file 6 "/usr/include/newlib/sys/lock.h"
 747              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 748              		.file 8 "/usr/include/newlib/stdlib.h"
 749              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 750              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 751              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 752              		.file 12 "Core/Inc/usbd_hid.h"
 753              		.file 13 "Core/Inc/usbd_desc.h"
 754              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 755              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ioreq.h"
 756              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
 757              		.file 17 "<built-in>"
ARM GAS  /tmp/ccEM5Rnn.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_hid.c
     /tmp/ccEM5Rnn.s:16     .text.USBD_HID_GetCfgDesc:0000000000000000 $t
     /tmp/ccEM5Rnn.s:23     .text.USBD_HID_GetCfgDesc:0000000000000000 USBD_HID_GetCfgDesc
     /tmp/ccEM5Rnn.s:46     .text.USBD_HID_GetCfgDesc:0000000000000008 $d
     /tmp/ccEM5Rnn.s:51     .text.USBD_HID_DataIn:0000000000000000 $t
     /tmp/ccEM5Rnn.s:57     .text.USBD_HID_DataIn:0000000000000000 USBD_HID_DataIn
     /tmp/ccEM5Rnn.s:84     .text.USBD_HID_GetDeviceQualifierDesc:0000000000000000 $t
     /tmp/ccEM5Rnn.s:90     .text.USBD_HID_GetDeviceQualifierDesc:0000000000000000 USBD_HID_GetDeviceQualifierDesc
     /tmp/ccEM5Rnn.s:112    .text.USBD_HID_GetDeviceQualifierDesc:0000000000000008 $d
     /tmp/ccEM5Rnn.s:117    .text.USBD_HID_Setup:0000000000000000 $t
     /tmp/ccEM5Rnn.s:123    .text.USBD_HID_Setup:0000000000000000 USBD_HID_Setup
     /tmp/ccEM5Rnn.s:341    .text.USBD_HID_Setup:00000000000000bc $d
     /tmp/ccEM5Rnn.s:347    .text.USBD_HID_DeInit:0000000000000000 $t
     /tmp/ccEM5Rnn.s:353    .text.USBD_HID_DeInit:0000000000000000 USBD_HID_DeInit
     /tmp/ccEM5Rnn.s:407    .text.USBD_HID_Init:0000000000000000 $t
     /tmp/ccEM5Rnn.s:413    .text.USBD_HID_Init:0000000000000000 USBD_HID_Init
     /tmp/ccEM5Rnn.s:473    .text.USBD_HID_SendReport:0000000000000000 $t
     /tmp/ccEM5Rnn.s:480    .text.USBD_HID_SendReport:0000000000000000 USBD_HID_SendReport
     /tmp/ccEM5Rnn.s:543    .text.USBD_HID_GetPollingInterval:0000000000000000 $t
     /tmp/ccEM5Rnn.s:550    .text.USBD_HID_GetPollingInterval:0000000000000000 USBD_HID_GetPollingInterval
     /tmp/ccEM5Rnn.s:584    .text.USBD_HID_GetReport:0000000000000000 $t
     /tmp/ccEM5Rnn.s:591    .text.USBD_HID_GetReport:0000000000000000 USBD_HID_GetReport
     /tmp/ccEM5Rnn.s:606    .text.USBD_HID_DataOut:0000000000000000 $t
     /tmp/ccEM5Rnn.s:612    .text.USBD_HID_DataOut:0000000000000000 USBD_HID_DataOut
     /tmp/ccEM5Rnn.s:677    .text.USBD_HID_DataOut:0000000000000038 $d
                            *COM*:0000000000000004 nOutData
                            *COM*:0000000000000008 OutDataBuffer
                            *COM*:0000000000000008 OutData
     /tmp/ccEM5Rnn.s:702    .data.USBD_HID:0000000000000000 USBD_HID
     /tmp/ccEM5Rnn.s:688    .data.HID_ReportDesc:0000000000000000 $d
     /tmp/ccEM5Rnn.s:692    .data.HID_ReportDesc:0000000000000000 HID_ReportDesc
     /tmp/ccEM5Rnn.s:699    .data.USBD_HID:0000000000000000 $d
     /tmp/ccEM5Rnn.s:718    .data.USBD_HID_CfgDesc:0000000000000000 $d
     /tmp/ccEM5Rnn.s:722    .data.USBD_HID_CfgDesc:0000000000000000 USBD_HID_CfgDesc
     /tmp/ccEM5Rnn.s:727    .data.USBD_HID_Desc:0000000000000000 $d
     /tmp/ccEM5Rnn.s:731    .data.USBD_HID_Desc:0000000000000000 USBD_HID_Desc
     /tmp/ccEM5Rnn.s:734    .data.USBD_HID_DeviceQualifierDesc:0000000000000000 $d
     /tmp/ccEM5Rnn.s:738    .data.USBD_HID_DeviceQualifierDesc:0000000000000000 USBD_HID_DeviceQualifierDesc

UNDEFINED SYMBOLS
USBD_CtlSendData
USBD_CtlError
USBD_LL_CloseEP
free
USBD_LL_OpenEP
malloc
USBD_LL_Transmit
USBD_LL_GetRxDataSize
memcpy
USBD_LL_PrepareReceive
